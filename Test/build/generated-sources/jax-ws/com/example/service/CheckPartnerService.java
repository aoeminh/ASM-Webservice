
package com.example.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CheckPartnerService", targetNamespace = "http://service.example.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CheckPartnerService {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "test", targetNamespace = "http://service.example.com/", className = "com.example.service.Test")
    @ResponseWrapper(localName = "testResponse", targetNamespace = "http://service.example.com/", className = "com.example.service.TestResponse")
    @Action(input = "http://service.example.com/CheckPartnerService/testRequest", output = "http://service.example.com/CheckPartnerService/testResponse")
    public String test();

    /**
     * 
     * @param transname
     * @param clientid
     * @param money
     * @param fee
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "userHis", targetNamespace = "http://service.example.com/", className = "com.example.service.UserHis")
    @ResponseWrapper(localName = "userHisResponse", targetNamespace = "http://service.example.com/", className = "com.example.service.UserHisResponse")
    @Action(input = "http://service.example.com/CheckPartnerService/userHisRequest", output = "http://service.example.com/CheckPartnerService/userHisResponse")
    public boolean userHis(
        @WebParam(name = "transname", targetNamespace = "")
        String transname,
        @WebParam(name = "money", targetNamespace = "")
        int money,
        @WebParam(name = "fee", targetNamespace = "")
        int fee,
        @WebParam(name = "clientid", targetNamespace = "")
        String clientid);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://service.example.com/", className = "com.example.service.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://service.example.com/", className = "com.example.service.HelloResponse")
    @Action(input = "http://service.example.com/CheckPartnerService/helloRequest", output = "http://service.example.com/CheckPartnerService/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param password
     * @param id
     * @return
     *     returns com.example.service.Client
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkClient", targetNamespace = "http://service.example.com/", className = "com.example.service.CheckClient")
    @ResponseWrapper(localName = "checkClientResponse", targetNamespace = "http://service.example.com/", className = "com.example.service.CheckClientResponse")
    @Action(input = "http://service.example.com/CheckPartnerService/checkClientRequest", output = "http://service.example.com/CheckPartnerService/checkClientResponse")
    public Client checkClient(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param money
     * @param partnerid
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updatePartnerMoney", targetNamespace = "http://service.example.com/", className = "com.example.service.UpdatePartnerMoney")
    @ResponseWrapper(localName = "updatePartnerMoneyResponse", targetNamespace = "http://service.example.com/", className = "com.example.service.UpdatePartnerMoneyResponse")
    @Action(input = "http://service.example.com/CheckPartnerService/updatePartnerMoneyRequest", output = "http://service.example.com/CheckPartnerService/updatePartnerMoneyResponse")
    public boolean updatePartnerMoney(
        @WebParam(name = "partnerid", targetNamespace = "")
        String partnerid,
        @WebParam(name = "money", targetNamespace = "")
        int money);

    /**
     * 
     * @param money
     * @param clienid
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateCLientMoney", targetNamespace = "http://service.example.com/", className = "com.example.service.UpdateCLientMoney")
    @ResponseWrapper(localName = "updateCLientMoneyResponse", targetNamespace = "http://service.example.com/", className = "com.example.service.UpdateCLientMoneyResponse")
    @Action(input = "http://service.example.com/CheckPartnerService/updateCLientMoneyRequest", output = "http://service.example.com/CheckPartnerService/updateCLientMoneyResponse")
    public boolean updateCLientMoney(
        @WebParam(name = "clienid", targetNamespace = "")
        String clienid,
        @WebParam(name = "money", targetNamespace = "")
        int money);

    /**
     * 
     * @param transname
     * @param money
     * @param fee
     * @param partnerid
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "partnerHis", targetNamespace = "http://service.example.com/", className = "com.example.service.PartnerHis")
    @ResponseWrapper(localName = "partnerHisResponse", targetNamespace = "http://service.example.com/", className = "com.example.service.PartnerHisResponse")
    @Action(input = "http://service.example.com/CheckPartnerService/partnerHisRequest", output = "http://service.example.com/CheckPartnerService/partnerHisResponse")
    public boolean partnerHis(
        @WebParam(name = "transname", targetNamespace = "")
        String transname,
        @WebParam(name = "money", targetNamespace = "")
        int money,
        @WebParam(name = "fee", targetNamespace = "")
        int fee,
        @WebParam(name = "partnerid", targetNamespace = "")
        String partnerid);

    /**
     * 
     * @param password
     * @param id
     * @return
     *     returns com.example.service.Partner
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkPartner", targetNamespace = "http://service.example.com/", className = "com.example.service.CheckPartner")
    @ResponseWrapper(localName = "checkPartnerResponse", targetNamespace = "http://service.example.com/", className = "com.example.service.CheckPartnerResponse")
    @Action(input = "http://service.example.com/CheckPartnerService/checkPartnerRequest", output = "http://service.example.com/CheckPartnerService/checkPartnerResponse")
    public Partner checkPartner(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param endDate
     * @param partnerid
     * @param startDate
     * @return
     *     returns java.util.List<com.example.service.Partnerhistory>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPartnerHis", targetNamespace = "http://service.example.com/", className = "com.example.service.GetPartnerHis")
    @ResponseWrapper(localName = "getPartnerHisResponse", targetNamespace = "http://service.example.com/", className = "com.example.service.GetPartnerHisResponse")
    @Action(input = "http://service.example.com/CheckPartnerService/getPartnerHisRequest", output = "http://service.example.com/CheckPartnerService/getPartnerHisResponse")
    public List<Partnerhistory> getPartnerHis(
        @WebParam(name = "partnerid", targetNamespace = "")
        String partnerid,
        @WebParam(name = "startDate", targetNamespace = "")
        String startDate,
        @WebParam(name = "endDate", targetNamespace = "")
        String endDate);

}
